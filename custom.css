:root {
    --primary: #EEE;
    --secondary: #45F;
    --text: #111;
    --hover:#BBB;
    --glow: #000;
}

input {
    padding: 0.5em;
    font-size: 100%;
    color: var(--text);
    border-radius: 0.25em;
    outline: var(--secondary) solid 2px;
    border: none;
    background-color: var(--primary);
}

input:focus, input:focus + span {
    box-shadow: var(--glow) 0px 0px 0.75rem;
}


/* The slider itself */

input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    height: 0.5rem;
    padding: 0;
    background: var(--primary);
    outline: none;
    -webkit-transition: .2s;
    transition: opacity .2s;
}


/* Mouse-over effects */

input[type="range"]:hover {
    opacity: 1;
    /* Fully shown on mouse-over */
}


/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    /* Override default look */
    appearance: none;
    width: 1.5rem;
    /* Set a specific slider handle width */
    height: 1.5rem;
    /* Slider handle height */
    background: var(--secondary);
    /* Green background */
    cursor: pointer;
    border-radius: 1rem;
    /* Cursor on hover */
}

input[type="range"]::-moz-range-thumb {
    width: 1.5rem;
    /* Set a specific slider handle width */
    height: 1.5rem;
    /* Slider handle height */
    background: var(--secondary);
    /* Green background */
    cursor: pointer;
    /* Cursor on hover */
    border: none;
    border-radius: 1rem;
}


/* Customize the label (the container) */

.container {
    display: block;
    position: relative;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.container input {
    position: absolute;
    cursor: pointer;
    height: 1em;
    width: 1em;
    margin: 0;
    opacity: 0;
}

.radio {
    position: absolute;
    top: 0;
    left: 0;
    height: 1em;
    width: 1em;
    background-color: var(--primary);
    border-radius: 50%;
    z-index: -1;
}


/* On mouse-over, add a grey background color */

.container:hover input~.radio {
    background-color: var(--hover);
}


/* When the radio button is checked, add a blue background */

.container input:checked~.radio {
    background-color: var(--secondary);
}


/* Create the indicator (the dot/circle - hidden when not checked) */

.radio:after {
    content: "";
    position: absolute;
    display: none;
}


/* Show the indicator (dot/circle) when checked */

.container input:checked~.radio:after {
    display: block;
}


/* Style the indicator (dot/circle) */

.container .radio:after {
    top: 0.25em;
    left: 0.25em;
    width: 0.5em;
    height: 0.5em;
    border-radius: 50%;
    background: var(--primary);
}

















/* checkbox */
  
  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 1em;
    width: 1em;
    background-color: var(--primary);
    z-index: -1;
  }
  
  /* On mouse-over, add a grey background color */
  .container:hover input ~ .checkmark {
    background-color: var(--hover);
  }
  
  /* When the checkbox is checked, add a blue background */
  .container input:checked ~ .checkmark {
    background-color: var(--secondary);
  }
  
  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the checkmark when checked */
  .container input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the checkmark/indicator */
  .container .checkmark:after {
    top: 0.15em;
    left: 0.35em;
    width: 0.2em;
    height: 0.4em;
    border: solid white;
    border-width: 0 2px 2px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }